"""
–ú–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π Discord
"""
import asyncio
import logging
from datetime import datetime, timedelta
from typing import Optional, List, Dict, Set
import discord

logger = logging.getLogger(__name__)

class DiscordLogger:
    def __init__(self, bot, config):
        self.bot = bot
        self.config = config
        self.rate_limits = {}
    
    async def get_log_channel(self, guild_id: int) -> Optional[discord.TextChannel]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        channel_id = self.config.get_log_channel_id(guild_id)
        if not channel_id:
            return None
            
        try:
            channel = self.bot.get_channel(channel_id)
            if not channel:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {channel_id} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}")
            return channel
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}: {e}")
            return None
    
    def is_rate_limited(self, event_type: str, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã –¥–ª—è —Å–æ–±—ã—Ç–∏—è"""
        now = datetime.utcnow()
        key = f"{event_type}_{user_id}"
        
        if key not in self.rate_limits:
            self.rate_limits[key] = []
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 1 –º–∏–Ω—É—Ç—ã)
        self.rate_limits[key] = [
            timestamp for timestamp in self.rate_limits[key]
            if now - timestamp < timedelta(minutes=1)
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç (–º–∞–∫—Å–∏–º—É–º 5 —Å–æ–±—ã—Ç–∏–π –≤ –º–∏–Ω—É—Ç—É)
        if len(self.rate_limits[key]) >= 5:
            return True
        
        self.rate_limits[key].append(now)
        return False
    
    async def send_log(self, guild_id: int, title: str, description: str, 
                      color: discord.Color = discord.Color.blue(), 
                      fields: List[tuple] = None, thumbnail: str = None, 
                      image: str = None, footer: str = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥ –≤ –∫–∞–Ω–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        log_channel = await self.get_log_channel(guild_id)
        if not log_channel:
            logger.warning(f"–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}, –ª–æ–≥ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            return
            
        embed = discord.Embed(
            title=title,
            description=description,
            color=color,
            timestamp=datetime.utcnow()
        )
        
        if fields:
            for name, value, inline in fields:
                if len(str(value)) > 1024:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Discord
                    value = str(value)[:1021] + "..."
                embed.add_field(name=name, value=value, inline=inline)
        
        if thumbnail:
            embed.set_thumbnail(url=thumbnail)
        
        if image:
            embed.set_image(url=image)
            
        if footer:
            embed.set_footer(text=footer)
        else:
            embed.set_footer(text=f"–°–µ—Ä–≤–µ—Ä: {guild_id} | ID: {datetime.utcnow().timestamp()}")
            
        try:
            await log_channel.send(embed=embed)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild_id}: {e}")
    
    def format_user_info(self, user: discord.User) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        return f"{user.mention} (`{user.id}`)\n{user.name}#{user.discriminator}"
    
    def format_channel_info(self, channel: discord.TextChannel) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ"""
        category = f" –≤ {channel.category.name}" if channel.category else ""
        return f"{channel.mention} (`{channel.id}`){category}"
    
    async def log_voice_state_update(self, member, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        if not self.config.log_voice or before.channel == after.channel or not member.guild:
            return
        
        if before.channel is None:
            # –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
            await self.send_log(
                guild_id=member.guild.id,
                title="üé§ –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}\n**–ö–∞–Ω–∞–ª:** {after.channel.mention}",
                color=discord.Color.green(),
                fields=[
                    ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(after.channel.members)), True),
                    ("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏", "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if self.config.speech_recognition else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ", True)
                ],
                thumbnail=member.display_avatar.url
            )
        elif after.channel is None:
            # –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            await self.send_log(
                guild_id=member.guild.id,
                title="üé§ –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}\n**–ö–∞–Ω–∞–ª:** {before.channel.mention}",
                color=discord.Color.red(),
                fields=[
                    ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(before.channel.members)), True)
                ],
                thumbnail=member.display_avatar.url
            )
        else:
            # –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
            await self.send_log(
                guild_id=member.guild.id,
                title="üé§ –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}",
                color=discord.Color.blue(),
                fields=[
                    ("–ò–∑", before.channel.mention, True),
                    ("–í", after.channel.mention, True),
                    ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –Ω–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ", str(len(after.channel.members)), True)
                ],
                thumbnail=member.display_avatar.url
            )
