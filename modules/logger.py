"""
–ú–æ–¥—É–ª—å –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π Discord
"""
import asyncio
import logging
from datetime import datetime, timedelta, timezone
from typing import Optional, List, Dict, Set
import discord

logger = logging.getLogger(__name__)

class DiscordLogger:
    def __init__(self, bot, config):
        self.bot = bot
        self.config = config
        self.rate_limits = {}
    
    async def get_log_channel(self, guild_id: int) -> Optional[discord.TextChannel]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        channel_id = self.config.get_log_channel_id(guild_id)
        if not channel_id:
            return None
            
        try:
            channel = self.bot.get_channel(channel_id)
            if not channel:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {channel_id} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}")
            return channel
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}: {e}")
            return None
    
    def is_rate_limited(self, event_type: str, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã –¥–ª—è —Å–æ–±—ã—Ç–∏—è"""
        now = datetime.utcnow()
        key = f"{event_type}_{user_id}"
        
        if key not in self.rate_limits:
            self.rate_limits[key] = []
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 1 –º–∏–Ω—É—Ç—ã)
        self.rate_limits[key] = [
            timestamp for timestamp in self.rate_limits[key]
            if now - timestamp < timedelta(minutes=1)
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç (–º–∞–∫—Å–∏–º—É–º 5 —Å–æ–±—ã—Ç–∏–π –≤ –º–∏–Ω—É—Ç—É)
        if len(self.rate_limits[key]) >= 5:
            return True
        
        self.rate_limits[key].append(now)
        return False
    
    async def send_log(self, guild_id: int, title: str, description: str, 
                      color: discord.Color = discord.Color.blue(), 
                      fields: List[tuple] = None, thumbnail: str = None, 
                      image: str = None, footer: str = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥ –≤ –∫–∞–Ω–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        log_channel = await self.get_log_channel(guild_id)
        if not log_channel:
            logger.warning(f"–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}, –ª–æ–≥ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            return
            
        embed = discord.Embed(
            title=title,
            description=description,
            color=color
        )
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Ä–µ–º—è –≤ embed
        embed.add_field(name="üïê –í—Ä–µ–º—è", value=self.format_time(), inline=True)
        
        if fields:
            for name, value, inline in fields:
                if len(str(value)) > 1024:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Discord
                    value = str(value)[:1021] + "..."
                embed.add_field(name=name, value=value, inline=inline)
        
        if thumbnail:
            embed.set_thumbnail(url=thumbnail)
        
        if image:
            embed.set_image(url=image)
            
        if footer:
            embed.set_footer(text=footer)
        else:
            embed.set_footer(text=f"–°–µ—Ä–≤–µ—Ä: {guild_id}")
            
        try:
            await log_channel.send(embed=embed)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild_id}: {e}")
    
    def format_user_info(self, user: discord.User) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        return f"{user.mention} (`{user.id}`)\n{user.name}#{user.discriminator}"
    
    def format_channel_info(self, channel: discord.TextChannel) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ"""
        category = f" –≤ {channel.category.name}" if channel.category else ""
        return f"{channel.mention} (`{channel.id}`){category}"
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–ô ===
    async def log_message_create(self, message):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if not self.config.log_messages:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã
        if self.is_rate_limited("message_create", message.author.id):
            return
        
        content = message.content[:1000] if message.content else "*–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞*"
        
        await self.send_log(
            guild_id=message.guild.id,
            title="üìù –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            description=f"**–ê–≤—Ç–æ—Ä:** {self.format_user_info(message.author)}\n**–ö–∞–Ω–∞–ª:** {message.channel.mention}\n**–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:** {content}",
            color=discord.Color.green(),
            fields=[
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(message.id), True),
                ("–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è", self.format_time(message.created_at), True),
                ("–í–ª–æ–∂–µ–Ω–∏—è", f"{len(message.attachments)}" if message.attachments else "0", True)
            ],
            thumbnail=message.author.display_avatar.url
        )
    
    async def log_message_edit(self, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if not self.config.log_messages or before.content == after.content:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã
        if self.is_rate_limited("message_edit", after.author.id):
            return
        
        old_content = before.content[:500] if before.content else "*–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ*"
        new_content = after.content[:500] if after.content else "*–ü—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ*"
        
        await self.send_log(
            guild_id=after.guild.id,
            title="‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ",
            description=f"**–ê–≤—Ç–æ—Ä:** {self.format_user_info(after.author)}\n**–ö–∞–Ω–∞–ª:** {after.channel.mention}",
            color=discord.Color.orange(),
            fields=[
                ("–°—Ç–∞—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ", old_content, False),
                ("–ù–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ", new_content, False),
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(after.id), True),
                ("–í—Ä–µ–º—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", self.format_time(after.edited_at) if after.edited_at else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", True)
            ],
            thumbnail=after.author.display_avatar.url
        )
    
    async def log_message_delete(self, message):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        if not self.config.log_messages:
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã
        if self.is_rate_limited("message_delete", message.author.id):
            return
        
        content = message.content[:1000] if message.content else "*–°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ —Ç–µ–∫—Å—Ç–∞*"
        
        await self.send_log(
            guild_id=message.guild.id,
            title="üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",
            description=f"**–ê–≤—Ç–æ—Ä:** {self.format_user_info(message.author)}\n**–ö–∞–Ω–∞–ª:** {message.channel.mention}\n**–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:** {content}",
            color=discord.Color.red(),
            fields=[
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(message.id), True),
                ("–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è", self.format_time(message.created_at), True),
                ("–í—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è", self.format_time(), True)
            ],
            thumbnail=message.author.display_avatar.url
        )
    
    async def log_bulk_message_delete(self, messages):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        if not self.config.log_messages:
            return
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –∞–≤—Ç–æ—Ä–∞–º
        authors = {}
        for message in messages:
            author_id = message.author.id
            if author_id not in authors:
                authors[author_id] = {
                    'user': message.author,
                    'count': 0
                }
            authors[author_id]['count'] += 1
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–≥ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ—Ä–∞
        for author_data in authors.values():
            user = author_data['user']
            count = author_data['count']
            
            await self.send_log(
                guild_id=messages[0].guild.id,
                title="üóëÔ∏è –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π",
                description=f"**–ê–≤—Ç–æ—Ä:** {self.format_user_info(user)}\n**–ö–∞–Ω–∞–ª:** {messages[0].channel.mention}\n**–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π:** {count}",
                color=discord.Color.dark_red(),
                fields=[
                    ("–í—Ä–µ–º—è —É–¥–∞–ª–µ–Ω–∏—è", self.format_time(), True),
                    ("–í—Å–µ–≥–æ —É–¥–∞–ª–µ–Ω–æ", str(len(messages)), True)
                ],
                thumbnail=user.display_avatar.url
            )
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –£–ß–ê–°–¢–ù–ò–ö–û–í ===
    async def log_member_join(self, member):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        if not self.config.log_members:
            return
        
        account_age = datetime.utcnow() - member.created_at
        days_old = account_age.days
        
        fields = [
            ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(member.id), True),
            ("–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", f"{days_old} –¥–Ω–µ–π", True),
            ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", str(member.guild.member_count), True)
        ]
        
        if member.pending:
            fields.append(("–°—Ç–∞—Ç—É—Å", "–û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª", True))
        
        await self.send_log(
            guild_id=member.guild.id,
            title="üëã –£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}",
            color=discord.Color.green(),
            fields=fields,
            thumbnail=member.display_avatar.url
        )
    
    async def log_member_remove(self, member):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –≤—ã—Ö–æ–¥ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        if not self.config.log_members:
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞
        roles = [role.mention for role in member.roles[1:]]  # –ò—Å–∫–ª—é—á–∞–µ–º @everyone
        roles_text = ", ".join(roles) if roles else "–ë–µ–∑ —Ä–æ–ª–µ–π"
        
        await self.send_log(
            guild_id=member.guild.id,
            title="üëã –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}",
            color=discord.Color.red(),
            fields=[
                ("–†–æ–ª–∏", roles_text[:1000], False),
                ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", str(member.guild.member_count), True),
                ("–í—Ä–µ–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", f"{(datetime.utcnow() - member.joined_at).days} –¥–Ω–µ–π" if member.joined_at else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", True)
            ],
            thumbnail=member.display_avatar.url
        )
    
    async def log_member_update(self, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
        if not self.config.log_members:
            return
        
        changes = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∏–∫–Ω–µ–π–º–∞
        if before.display_name != after.display_name:
            changes.append(("üìù –ù–∏–∫–Ω–µ–π–º", f"{before.display_name} ‚Üí {after.display_name}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–æ–ª–µ–π
        if before.roles != after.roles:
            added_roles = [role for role in after.roles if role not in before.roles]
            removed_roles = [role for role in before.roles if role not in after.roles]
            
            if added_roles:
                roles_text = ", ".join([role.mention for role in added_roles])
                changes.append(("‚ûï –î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏", roles_text, False))
            
            if removed_roles:
                roles_text = ", ".join([role.mention for role in removed_roles])
                changes.append(("‚ûñ –£–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏", roles_text, False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
        if before.display_avatar.url != after.display_avatar.url:
            changes.append(("üñºÔ∏è –ê–≤–∞—Ç–∞—Ä", "–ò–∑–º–µ–Ω–µ–Ω", True))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª
        if hasattr(before, 'pending') and hasattr(after, 'pending') and before.pending != after.pending:
            status = "‚úÖ –ü—Ä–æ—à–µ–ª –ø—Ä–æ–≤–µ—Ä–∫—É" if not after.pending else "‚è≥ –û–∂–∏–¥–∞–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏"
            changes.append(("üìã –°—Ç–∞—Ç—É—Å –ø—Ä–æ–≤–µ—Ä–∫–∏", status, True))
        
        if changes:
            fields = [("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(after.id), True)]
            fields.extend(changes)
            
            await self.send_log(
                guild_id=after.guild.id,
                title="üë§ –ü—Ä–æ—Ñ–∏–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(after)}",
                color=discord.Color.blue(),
                fields=fields,
                thumbnail=after.display_avatar.url
            )
    
    async def log_user_update(self, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if not self.config.log_members:
            return
        
        changes = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if before.name != after.name:
            changes.append(("üë§ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", f"{before.name} ‚Üí {after.name}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ç–æ—Ä–∞
        if before.discriminator != after.discriminator:
            changes.append(("üè∑Ô∏è –î–∏—Å–∫—Ä–∏–º–∏–Ω–∞—Ç–æ—Ä", f"{before.discriminator} ‚Üí {after.discriminator}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤–∞—Ç–∞—Ä–∞
        if before.avatar.url != after.avatar.url:
            changes.append(("üñºÔ∏è –ê–≤–∞—Ç–∞—Ä", "–ò–∑–º–µ–Ω–µ–Ω", True))
        
        if changes:
            fields = [("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(after.id), True)]
            fields.extend(changes)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª—ã –ª–æ–≥–æ–≤ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤, –≥–¥–µ –µ—Å—Ç—å —ç—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            for guild in self.bot.guilds:
                if guild.get_member(after.id):
                    await self.send_log(
                        guild_id=guild.id,
                        title="üë§ –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω",
                        description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(after)}",
                        color=discord.Color.blue(),
                        fields=fields,
                        thumbnail=after.display_avatar.url
                    )
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ö–ê–ù–ê–õ–û–í ===
    async def log_channel_create(self, channel):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
        if not self.config.log_channels:
            return
        
        channel_type = self.get_channel_type_emoji(channel.type)
        category = f" –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {channel.category.name}" if channel.category else ""
        
        fields = [
            ("ID –∫–∞–Ω–∞–ª–∞", str(channel.id), True),
            ("–¢–∏–ø", channel.type.name, True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(channel.position), True)
        ]
        
        if hasattr(channel, 'topic') and channel.topic:
            fields.append(("–û–ø–∏—Å–∞–Ω–∏–µ", channel.topic[:500], False))
        
        await self.send_log(
            guild_id=channel.guild.id,
            title=f"{channel_type} –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω",
            description=f"**–ö–∞–Ω–∞–ª:** {channel.mention}{category}",
            color=discord.Color.green(),
            fields=fields
        )
    
    async def log_channel_delete(self, channel):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
        if not self.config.log_channels:
            return
        
        channel_type = self.get_channel_type_emoji(channel.type)
        category = f" –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ {channel.category.name}" if channel.category else ""
        
        fields = [
            ("–ù–∞–∑–≤–∞–Ω–∏–µ", channel.name, True),
            ("–¢–∏–ø", channel.type.name, True),
            ("ID –∫–∞–Ω–∞–ª–∞", str(channel.id), True)
        ]
        
        if hasattr(channel, 'topic') and channel.topic:
            fields.append(("–û–ø–∏—Å–∞–Ω–∏–µ", channel.topic[:500], False))
        
        await self.send_log(
            guild_id=channel.guild.id,
            title=f"{channel_type} –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω",
            description=f"**–ö–∞–Ω–∞–ª:** #{channel.name}{category}",
            color=discord.Color.red(),
            fields=fields
        )
    
    async def log_channel_update(self, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞"""
        if not self.config.log_channels:
            return
        
        changes = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
        if before.name != after.name:
            changes.append(("üìù –ù–∞–∑–≤–∞–Ω–∏–µ", f"{before.name} ‚Üí {after.name}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
        if hasattr(before, 'topic') and hasattr(after, 'topic') and before.topic != after.topic:
            old_topic = before.topic[:200] if before.topic else "*–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è*"
            new_topic = after.topic[:200] if after.topic else "*–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è*"
            changes.append(("üìÑ –û–ø–∏—Å–∞–Ω–∏–µ", f"{old_topic} ‚Üí {new_topic}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if before.category != after.category:
            old_category = before.category.name if before.category else "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
            new_category = after.category.name if after.category else "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
            changes.append(("üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è", f"{old_category} ‚Üí {new_category}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
        if before.position != after.position:
            changes.append(("üìç –ü–æ–∑–∏—Ü–∏—è", f"{before.position} ‚Üí {after.position}", True))
        
        if changes:
            fields = [("ID –∫–∞–Ω–∞–ª–∞", str(after.id), True)]
            fields.extend(changes)
            
            await self.send_log(
                guild_id=after.guild.id,
                title="üìù –ö–∞–Ω–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω",
                description=f"**–ö–∞–Ω–∞–ª:** {after.mention}",
                color=discord.Color.blue(),
                fields=fields
            )
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –†–û–õ–ï–ô ===
    async def log_role_create(self, role):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–ª–∏"""
        if not self.config.log_roles:
            return
        
        fields = [
            ("ID —Ä–æ–ª–∏", str(role.id), True),
            ("–¶–≤–µ—Ç", f"#{role.color.value:06x}", True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(role.position), True),
            ("–û—Ç–¥–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å", "‚úÖ" if role.hoist else "‚ùå", True),
            ("–£–ø–æ–º–∏–Ω–∞–µ–º–∞—è", "‚úÖ" if role.mentionable else "‚ùå", True),
            ("–£–ø—Ä–∞–≤–ª—è–µ–º–∞—è –±–æ—Ç–æ–º", "‚úÖ" if role.managed else "‚ùå", True)
        ]
        
        if role.permissions.value != 0:
            fields.append(("–†–∞–∑—Ä–µ—à–µ–Ω–∏—è", f"{role.permissions.value}", False))
        
        await self.send_log(
            guild_id=role.guild.id,
            title="üé≠ –†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞",
            description=f"**–†–æ–ª—å:** {role.mention}",
            color=role.color if role.color.value != 0 else discord.Color.blue(),
            fields=fields
        )
    
    async def log_role_delete(self, role):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ä–æ–ª–∏"""
        if not self.config.log_roles:
            return
        
        fields = [
            ("–ù–∞–∑–≤–∞–Ω–∏–µ", role.name, True),
            ("ID —Ä–æ–ª–∏", str(role.id), True),
            ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Ä–æ–ª—å—é", str(len(role.members)), True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(role.position), True)
        ]
        
        await self.send_log(
            guild_id=role.guild.id,
            title="üé≠ –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞",
            description=f"**–†–æ–ª—å:** @{role.name}",
            color=discord.Color.red(),
            fields=fields
        )
    
    async def log_role_update(self, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ–ª–∏"""
        if not self.config.log_roles:
            return
        
        changes = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
        if before.name != after.name:
            changes.append(("üìù –ù–∞–∑–≤–∞–Ω–∏–µ", f"{before.name} ‚Üí {after.name}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–≤–µ—Ç–∞
        if before.color != after.color:
            old_color = f"#{before.color.value:06x}"
            new_color = f"#{after.color.value:06x}"
            changes.append(("üé® –¶–≤–µ—Ç", f"{old_color} ‚Üí {new_color}", True))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
        if before.position != after.position:
            changes.append(("üìç –ü–æ–∑–∏—Ü–∏—è", f"{before.position} ‚Üí {after.position}", True))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π
        if before.permissions != after.permissions:
            old_perms = before.permissions.value
            new_perms = after.permissions.value
            changes.append(("üîê –†–∞–∑—Ä–µ—à–µ–Ω–∏—è", f"{old_perms} ‚Üí {new_perms}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–ª–∞–≥–æ–≤
        if before.hoist != after.hoist:
            status = "‚úÖ" if after.hoist else "‚ùå"
            changes.append(("üìã –û—Ç–¥–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å", status, True))
        
        if before.mentionable != after.mentionable:
            status = "‚úÖ" if after.mentionable else "‚ùå"
            changes.append(("üí¨ –£–ø–æ–º–∏–Ω–∞–µ–º–∞—è", status, True))
        
        if changes:
            fields = [("ID —Ä–æ–ª–∏", str(after.id), True)]
            fields.extend(changes)
            
            await self.send_log(
                guild_id=after.guild.id,
                title="üé≠ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞",
                description=f"**–†–æ–ª—å:** {after.mention}",
                color=after.color if after.color.value != 0 else discord.Color.blue(),
                fields=fields
            )
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –†–ï–ê–ö–¶–ò–ô ===
    async def log_reaction_add(self, reaction, user):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã
        if self.is_rate_limited("reaction_add", user.id):
            return
        
        await self.send_log(
            guild_id=reaction.message.guild.id,
            title="üëç –†–µ–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(user)}\n**–ö–∞–Ω–∞–ª:** {reaction.message.channel.mention}",
            color=discord.Color.green(),
            fields=[
                ("–†–µ–∞–∫—Ü–∏—è", str(reaction.emoji), True),
                ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", str(reaction.count), True),
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(reaction.message.id), True),
                ("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ", f"[–ü–µ—Ä–µ–π—Ç–∏]({reaction.message.jump_url})", False)
            ],
            thumbnail=user.display_avatar.url
        )
    
    async def log_reaction_remove(self, reaction, user):
        """–õ–æ–≥–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∞–∫—Ü–∏–∏"""
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã
        if self.is_rate_limited("reaction_remove", user.id):
            return
        
        await self.send_log(
            guild_id=reaction.message.guild.id,
            title="üëé –†–µ–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(user)}\n**–ö–∞–Ω–∞–ª:** {reaction.message.channel.mention}",
            color=discord.Color.red(),
            fields=[
                ("–†–µ–∞–∫—Ü–∏—è", str(reaction.emoji), True),
                ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", str(reaction.count), True),
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(reaction.message.id), True),
                ("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ", f"[–ü–µ—Ä–µ–π—Ç–∏]({reaction.message.jump_url})", False)
            ],
            thumbnail=user.display_avatar.url
        )
    
    async def log_reaction_clear(self, message, reactions):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ—á–∏—Å—Ç–∫—É –≤—Å–µ—Ö —Ä–µ–∞–∫—Ü–∏–π"""
        reactions_text = ", ".join([str(r.emoji) for r in reactions]) if reactions else "–ù–µ—Ç —Ä–µ–∞–∫—Ü–∏–π"
        
        await self.send_log(
            guild_id=message.guild.id,
            title="üßπ –í—Å–µ —Ä–µ–∞–∫—Ü–∏–∏ –æ—á–∏—â–µ–Ω—ã",
            description=f"**–ö–∞–Ω–∞–ª:** {message.channel.mention}",
            color=discord.Color.orange(),
            fields=[
                ("–û—á–∏—â–µ–Ω–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏", reactions_text[:1000], False),
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(message.id), True),
                ("–°—Å—ã–ª–∫–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ", f"[–ü–µ—Ä–µ–π—Ç–∏]({message.jump_url})", False)
            ]
        )
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –ì–û–õ–û–°–û–í–´–• –ö–ê–ù–ê–õ–û–í ===
    async def log_voice_state_update(self, member, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        if not self.config.log_voice or before.channel == after.channel or not member.guild:
            return
        
        if before.channel is None:
            # –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
            await self.send_log(
                guild_id=member.guild.id,
                title="üé§ –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}\n**–ö–∞–Ω–∞–ª:** {after.channel.mention}",
                color=discord.Color.green(),
                fields=[
                    ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(after.channel.members)), True)
                ],
                thumbnail=member.display_avatar.url
            )
        elif after.channel is None:
            # –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            await self.send_log(
                guild_id=member.guild.id,
                title="üé§ –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}\n**–ö–∞–Ω–∞–ª:** {before.channel.mention}",
                color=discord.Color.red(),
                fields=[
                    ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(before.channel.members)), True)
                ],
                thumbnail=member.display_avatar.url
            )
        else:
            # –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
            await self.send_log(
                guild_id=member.guild.id,
                title="üé§ –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.format_user_info(member)}",
                color=discord.Color.blue(),
                fields=[
                    ("–ò–∑", before.channel.mention, True),
                    ("–í", after.channel.mention, True),
                    ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –Ω–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ", str(len(after.channel.members)), True)
                ],
                thumbnail=member.display_avatar.url
            )
    
    # === –õ–û–ì–ò–†–û–í–ê–ù–ò–ï –°–ï–†–í–ï–†–ê ===
    async def log_guild_update(self, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"""
        changes = []
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è
        if before.name != after.name:
            changes.append(("üìù –ù–∞–∑–≤–∞–Ω–∏–µ", f"{before.name} ‚Üí {after.name}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è
        if before.description != after.description:
            old_desc = before.description[:200] if before.description else "*–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è*"
            new_desc = after.description[:200] if after.description else "*–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è*"
            changes.append(("üìÑ –û–ø–∏—Å–∞–Ω–∏–µ", f"{old_desc} ‚Üí {new_desc}", False))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏
        if before.icon != after.icon:
            changes.append(("üñºÔ∏è –ò–∫–æ–Ω–∫–∞", "–ò–∑–º–µ–Ω–µ–Ω–∞", True))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –±–∞–Ω–Ω–µ—Ä–∞
        if before.banner != after.banner:
            changes.append(("üñºÔ∏è –ë–∞–Ω–Ω–µ—Ä", "–ò–∑–º–µ–Ω–µ–Ω", True))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        if before.verification_level != after.verification_level:
            changes.append(("üîê –£—Ä–æ–≤–µ–Ω—å –ø—Ä–æ–≤–µ—Ä–∫–∏", f"{before.verification_level.name} ‚Üí {after.verification_level.name}", True))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        if before.default_notifications != after.default_notifications:
            changes.append(("üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", f"{before.default_notifications.name} ‚Üí {after.default_notifications.name}", True))
        
        if changes:
            fields = [("ID —Å–µ—Ä–≤–µ—Ä–∞", str(after.id), True)]
            fields.extend(changes)
            
            await self.send_log(
                guild_id=after.id,
                title="üè∞ –°–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {after.name}",
                color=discord.Color.blue(),
                fields=fields
            )
    
    async def log_guild_emojis_update(self, guild, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–º–æ–¥–∑–∏ —Å–µ—Ä–≤–µ—Ä–∞"""
        added = [emoji for emoji in after if emoji not in before]
        removed = [emoji for emoji in before if emoji not in after]
        
        if added:
            emojis_text = ", ".join([str(emoji) for emoji in added])
            await self.send_log(
                guild_id=guild.id,
                title="üòÄ –≠–º–æ–¥–∑–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {guild.name}",
                color=discord.Color.green(),
                fields=[
                    ("–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏", emojis_text[:1000], False),
                    ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", str(len(added)), True)
                ]
            )
        
        if removed:
            emojis_text = ", ".join([str(emoji) for emoji in removed])
            await self.send_log(
                guild_id=guild.id,
                title="üòÄ –≠–º–æ–¥–∑–∏ —É–¥–∞–ª–µ–Ω—ã",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {guild.name}",
                color=discord.Color.red(),
                fields=[
                    ("–£–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–º–æ–¥–∑–∏", emojis_text[:1000], False),
                    ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", str(len(removed)), True)
                ]
            )
    
    async def log_guild_stickers_update(self, guild, before, after):
        """–õ–æ–≥–∏—Ä—É–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞"""
        added = [sticker for sticker in after if sticker not in before]
        removed = [sticker for sticker in before if sticker not in after]
        
        if added:
            stickers_text = ", ".join([sticker.name for sticker in added])
            await self.send_log(
                guild_id=guild.id,
                title="üé® –°—Ç–∏–∫–µ—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {guild.name}",
                color=discord.Color.green(),
                fields=[
                    ("–î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã", stickers_text[:1000], False),
                    ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", str(len(added)), True)
                ]
            )
        
        if removed:
            stickers_text = ", ".join([sticker.name for sticker in removed])
            await self.send_log(
                guild_id=guild.id,
                title="üé® –°—Ç–∏–∫–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {guild.name}",
                color=discord.Color.red(),
                fields=[
                    ("–£–¥–∞–ª–µ–Ω–Ω—ã–µ —Å—Ç–∏–∫–µ—Ä—ã", stickers_text[:1000], False),
                    ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ", str(len(removed)), True)
                ]
            )
    
    # === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ===
    def get_channel_type_emoji(self, channel_type):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —ç–º–æ–¥–∑–∏ –¥–ª—è —Ç–∏–ø–∞ –∫–∞–Ω–∞–ª–∞"""
        emoji_map = {
            discord.ChannelType.text: "üí¨",
            discord.ChannelType.voice: "üîä",
            discord.ChannelType.category: "üìÅ",
            discord.ChannelType.news: "üì¢",
            discord.ChannelType.stage_voice: "üé≠",
            discord.ChannelType.forum: "üìã"
        }
        return emoji_map.get(channel_type, "‚ùì")
    
    def format_time(self, dt=None):
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ UTC+7 (–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–æ–µ)"""
        if dt is None:
            dt = datetime.utcnow()
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ UTC+7 (–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–æ–µ –≤—Ä–µ–º—è)
        novosibirsk_tz = timezone(timedelta(hours=7))
        if dt.tzinfo is None:
            # –ï—Å–ª–∏ –≤—Ä–µ–º—è –±–µ–∑ timezone, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ UTC
            dt = dt.replace(tzinfo=timezone.utc)
        
        local_time = dt.astimezone(novosibirsk_tz)
        return local_time.strftime('%d.%m.%Y %H:%M:%S MSK+4')
