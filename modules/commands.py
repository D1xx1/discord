"""
–ú–æ–¥—É–ª—å –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
"""
import os
import asyncio
import logging
from datetime import datetime
from typing import Optional
import discord
from discord.ext import commands

logger = logging.getLogger(__name__)

class BotCommands:
    def __init__(self, bot, config, discord_logger, speech_recognizer, voice_recorder=None):
        self.bot = bot
        self.config = config
        self.discord_logger = discord_logger
        self.speech_recognizer = speech_recognizer
        self.voice_recorder = voice_recorder
    
    def setup_commands(self):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞"""
        
        @self.bot.command(name='setlogchannel')
        @commands.has_permissions(administrator=True)
        async def set_log_channel(ctx, channel: discord.TextChannel):
            """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –Ω–∞ —Ç–µ–∫—É—â–µ–º —Å–µ—Ä–≤–µ—Ä–µ"""
            self.config.set_log_channel_id(ctx.guild.id, channel.id)
            
            await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {channel.mention}\n"
                          f"–¢–µ–ø–µ—Ä—å –≤—Å–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ **{ctx.guild.name}** –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!")
        
        @self.bot.command(name='excludeuser')
        @commands.has_permissions(administrator=True)
        async def exclude_user(ctx, user: discord.Member):
            """–ò—Å–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏"""
            self.config.add_excluded_user(ctx.guild.id, user.id)
            
            await self.discord_logger.send_log(
                guild_id=ctx.guild.id,
                title="üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.discord_logger.format_user_info(user)}\n**–ò—Å–∫–ª—é—á–∏–ª:** {ctx.author.mention}",
                color=discord.Color.orange(),
                fields=[
                    ("–í—Ä–µ–º—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                ],
                thumbnail=user.display_avatar.url
            )
            
            await ctx.send(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏!")
        
        @self.bot.command(name='includeuser')
        @commands.has_permissions(administrator=True)
        async def include_user(ctx, user: discord.Member):
            """–í–∫–ª—é—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏"""
            self.config.remove_excluded_user(ctx.guild.id, user.id)
            
            await self.discord_logger.send_log(
                guild_id=ctx.guild.id,
                title="‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–∫–ª—é—á–µ–Ω –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {self.discord_logger.format_user_info(user)}\n**–í–∫–ª—é—á–∏–ª:** {ctx.author.mention}",
                color=discord.Color.green(),
                fields=[
                    ("–í—Ä–µ–º—è –≤–∫–ª—é—á–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                ],
                thumbnail=user.display_avatar.url
            )
            
            await ctx.send(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –≤–∫–ª—é—á–µ–Ω –≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏!")
        
        @self.bot.command(name='excludedusers')
        @commands.has_permissions(administrator=True)
        async def excluded_users(ctx):
            """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
            excluded = self.config.excluded_users.get(ctx.guild.id, set())
            
            if not excluded:
                await ctx.send("‚ùå –ù–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.")
                return
            
            embed = discord.Embed(
                title="üö´ –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {ctx.guild.name}",
                color=discord.Color.orange()
            )
            
            users_list = []
            for user_id in excluded:
                user = ctx.guild.get_member(user_id)
                if user:
                    users_list.append(f"‚Ä¢ {user.mention} (`{user_id}`)")
                else:
                    users_list.append(f"‚Ä¢ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å (`{user_id}`)")
            
            embed.add_field(
                name="–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏",
                value="\n".join(users_list[:20]) + ("..." if len(users_list) > 20 else ""),
                inline=False
            )
            
            await ctx.send(embed=embed)
        
        @self.bot.command(name='togglespeech')
        @commands.has_permissions(administrator=True)
        async def toggle_speech_recognition(ctx):
            """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏"""
            self.config.speech_recognition = not self.config.speech_recognition
            self.config.save_config()
            
            status = "–≤–∫–ª—é—á–µ–Ω–æ" if self.config.speech_recognition else "–≤—ã–∫–ª—é—á–µ–Ω–æ"
            
            await self.discord_logger.send_log(
                guild_id=ctx.guild.id,
                title="üé§ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –∏–∑–º–µ–Ω–µ–Ω–æ",
                description=f"**–°—Ç–∞—Ç—É—Å:** {status.title()}\n**–ò–∑–º–µ–Ω–∏–ª:** {ctx.author.mention}",
                color=discord.Color.blue() if self.config.speech_recognition else discord.Color.red(),
                fields=[
                    ("–í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                ]
            )
            
            await ctx.send(f"‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ {status}!")
        
        @self.bot.command(name='joinvoice')
        @commands.has_permissions(administrator=True)
        async def join_voice(ctx, *, channel: discord.VoiceChannel = None):
            """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É —Å –∑–∞–ø–∏—Å—å—é –≥–æ–ª–æ—Å–∞"""
            if not channel:
                if ctx.author.voice and ctx.author.voice.channel:
                    channel = ctx.author.voice.channel
                else:
                    await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
                    return
            
            try:
                if ctx.guild.voice_client:
                    await ctx.guild.voice_client.disconnect()
                
                # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–∞–Ω–∞–ª—É
                voice_client = await channel.connect()
                
                # –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞
                if self.voice_recorder and self.config.speech_recognition:
                    await self.voice_recorder.start_recording(voice_client, ctx.guild.id)
                    recording_status = "‚úÖ –ó–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–∞"
                else:
                    recording_status = "‚ùå –ó–∞–ø–∏—Å—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
                
                await self.discord_logger.send_log(
                    guild_id=ctx.guild.id,
                    title="üé§ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
                    description=f"**–ö–∞–Ω–∞–ª:** {channel.mention}\n**–ü–æ–¥–∫–ª—é—á–∏–ª:** {ctx.author.mention}",
                    color=discord.Color.green(),
                    fields=[
                        ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(channel.members)), True),
                        ("–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏", "‚úÖ –í–∫–ª—é—á–µ–Ω–æ" if self.config.speech_recognition else "‚ùå –í—ã–∫–ª—é—á–µ–Ω–æ", True),
                        ("–ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞", recording_status, True),
                        ("–Ø–∑—ã–∫", self.config.speech_language, True),
                        ("FFmpeg", "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", True)
                    ]
                )
                
                await ctx.send(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É {channel.mention}!\n"
                              f"üé§ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏: {'–í–∫–ª—é—á–µ–Ω–æ' if self.config.speech_recognition else '–í—ã–∫–ª—é—á–µ–Ω–æ'}\n"
                              f"üéôÔ∏è –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞: {recording_status}\n"
                              f"üåç –Ø–∑—ã–∫: {self.config.speech_language}\n"
                              f"üé¨ FFmpeg: –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
                
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}")
                logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}")
        
        @self.bot.command(name='leavevoice')
        @commands.has_permissions(administrator=True)
        async def leave_voice(ctx):
            """–û—Ç–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
            if not ctx.guild.voice_client:
                await ctx.send("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
                return
            
            try:
                channel = ctx.guild.voice_client.channel
                
                # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞
                if self.voice_recorder:
                    await self.voice_recorder.stop_recording(ctx.guild.id)
                
                await ctx.guild.voice_client.disconnect()
                
                await self.discord_logger.send_log(
                    guild_id=ctx.guild.id,
                    title="üé§ –ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
                    description=f"**–ö–∞–Ω–∞–ª:** {channel.mention}\n**–û—Ç–∫–ª—é—á–∏–ª:** {ctx.author.mention}",
                    color=discord.Color.red(),
                    fields=[
                        ("–í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                    ]
                )
                
                await ctx.send("‚úÖ –ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞!")
                
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
        
        @self.bot.command(name='voicefiles')
        @commands.has_permissions(administrator=True)
        async def voice_files(ctx):
            """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–∞—Ö —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á—å—é"""
            stats = await self.speech_recognizer.get_voice_logs_stats(ctx.guild.id)
            
            if not stats['exists']:
                await ctx.send("‚ùå –§–∞–π–ª —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                return
            
            embed = discord.Embed(
                title="üìÅ –§–∞–π–ª—ã —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á—å—é",
                description=f"**–°–µ—Ä–≤–µ—Ä:** {ctx.guild.name}",
                color=discord.Color.blue()
            )
            
            embed.add_field(name="–§–∞–π–ª", value=f"`voice_logs_{ctx.guild.id}/voice.txt`", inline=False)
            embed.add_field(name="–†–∞–∑–º–µ—Ä", value=f"{stats['size'] / 1024:.1f} KB", inline=True)
            embed.add_field(name="–ó–∞–ø–∏—Å–µ–π", value=str(stats['lines']), inline=True)
            embed.add_field(name="–Ø–∑—ã–∫", value=self.config.speech_language, inline=True)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            if stats['recent_lines']:
                recent_text = "".join(stats['recent_lines'])
                if len(recent_text) > 1000:
                    recent_text = recent_text[:997] + "..."
                
                embed.add_field(
                    name="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏",
                    value=f"```\n{recent_text}\n```",
                    inline=False
                )
            
            await ctx.send(embed=embed)
        
        @self.bot.command(name='clearspeech')
        @commands.has_permissions(administrator=True)
        async def clear_speech_logs(ctx):
            """–û—á–∏—â–∞–µ—Ç —Ñ–∞–π–ª —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á—å—é"""
            success = self.speech_recognizer.clear_voice_logs(ctx.guild.id)
            
            if success:
                await self.discord_logger.send_log(
                    guild_id=ctx.guild.id,
                    title="üóëÔ∏è –§–∞–π–ª —Å —Ä–µ—á—å—é –æ—á–∏—â–µ–Ω",
                    description=f"**–û—á–∏—Å—Ç–∏–ª:** {ctx.author.mention}",
                    color=discord.Color.red(),
                    fields=[
                        ("–í—Ä–µ–º—è –æ—á–∏—Å—Ç–∫–∏", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                    ]
                )
                
                await ctx.send("‚úÖ –§–∞–π–ª —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á—å—é –æ—á–∏—â–µ–Ω!")
            else:
                await ctx.send("‚ùå –§–∞–π–ª —Å —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω–æ–π —Ä–µ—á—å—é –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        
        @self.bot.command(name='speechstatus')
        @commands.has_permissions(administrator=True)
        async def speech_status(ctx):
            """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏"""
            embed = discord.Embed(
                title="üé§ –°—Ç–∞—Ç—É—Å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏",
                color=discord.Color.blue()
            )
            
            status_emoji = "‚úÖ" if self.config.speech_recognition else "‚ùå"
            embed.add_field(name="–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏", value=f"{status_emoji} {'–í–∫–ª—é—á–µ–Ω–æ' if self.config.speech_recognition else '–í—ã–∫–ª—é—á–µ–Ω–æ'}", inline=True)
            embed.add_field(name="–Ø–∑—ã–∫", value=self.config.speech_language, inline=True)
            embed.add_field(name="–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=f"{self.config.min_audio_duration}—Å", inline=True)
            embed.add_field(name="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", value=f"{self.config.max_audio_duration}—Å", inline=True)
            
            excluded_count = len(self.config.excluded_users.get(ctx.guild.id, set()))
            embed.add_field(name="–ò—Å–∫–ª—é—á–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=str(excluded_count), inline=True)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º FFmpeg
            from modules.ffmpeg_setup import check_ffmpeg
            ffmpeg_status = "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" if check_ffmpeg() else "‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            embed.add_field(name="FFmpeg", value=ffmpeg_status, inline=True)
            
            # –°—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞
            if self.voice_recorder:
                recording_status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞" if self.voice_recorder.is_recording(ctx.guild.id) else "‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
                embed.add_field(name="–ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞", value=recording_status, inline=True)
            else:
                embed.add_field(name="–ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞", value="‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞", inline=True)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –ª–æ–≥–æ–≤
            stats = await self.speech_recognizer.get_voice_logs_stats(ctx.guild.id)
            
            if stats['exists']:
                embed.add_field(name="–§–∞–π–ª –ª–æ–≥–æ–≤", value=f"`voice_logs_{ctx.guild.id}/voice.txt`", inline=False)
                embed.add_field(name="–†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞", value=f"{stats['size'] / 1024:.1f} KB", inline=True)
                embed.add_field(name="–ó–∞–ø–∏—Å–µ–π", value=str(stats['lines']), inline=True)
            else:
                embed.add_field(name="–§–∞–π–ª –ª–æ–≥–æ–≤", value="‚ùå –ù–µ —Å–æ–∑–¥–∞–Ω", inline=False)
            
            await ctx.send(embed=embed)
        
        @self.bot.command(name='startrecording')
        @commands.has_permissions(administrator=True)
        async def start_recording(ctx):
            """–ù–∞—á–∏–Ω–∞–µ—Ç –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –≤ —Ç–µ–∫—É—â–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ"""
            if not ctx.guild.voice_client:
                await ctx.send("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
                return
            
            if not self.voice_recorder:
                await ctx.send("‚ùå –ú–æ–¥—É–ª—å –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
                return
            
            if self.voice_recorder.is_recording(ctx.guild.id):
                await ctx.send("‚ùå –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∞!")
                return
            
            try:
                success = await self.voice_recorder.start_recording(ctx.guild.voice_client, ctx.guild.id)
                
                if success:
                    await self.discord_logger.send_log(
                        guild_id=ctx.guild.id,
                        title="üéôÔ∏è –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –Ω–∞—á–∞—Ç–∞",
                        description=f"**–ù–∞—á–∞–ª:** {ctx.author.mention}",
                        color=discord.Color.green(),
                        fields=[
                            ("–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                        ]
                    )
                    
                    await ctx.send("‚úÖ –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –Ω–∞—á–∞—Ç–∞! –ë–æ—Ç —Ç–µ–ø–µ—Ä—å —Å–ª—ã—à–∏—Ç –∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç —Ä–µ—á—å.")
                else:
                    await ctx.send("‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞!")
                    
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞: {e}")
                logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞: {e}")
        
        @self.bot.command(name='stoprecording')
        @commands.has_permissions(administrator=True)
        async def stop_recording(ctx):
            """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞"""
            if not self.voice_recorder:
                await ctx.send("‚ùå –ú–æ–¥—É–ª—å –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
                return
            
            if not self.voice_recorder.is_recording(ctx.guild.id):
                await ctx.send("‚ùå –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞!")
                return
            
            try:
                success = await self.voice_recorder.stop_recording(ctx.guild.id)
                
                if success:
                    await self.discord_logger.send_log(
                        guild_id=ctx.guild.id,
                        title="üéôÔ∏è –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞",
                        description=f"**–û—Å—Ç–∞–Ω–æ–≤–∏–ª:** {ctx.author.mention}",
                        color=discord.Color.red(),
                        fields=[
                            ("–í—Ä–µ–º—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
                        ]
                    )
                    
                    await ctx.send("‚úÖ –ó–∞–ø–∏—Å—å –≥–æ–ª–æ—Å–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")
                else:
                    await ctx.send("‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞!")
                    
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞: {e}")
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞: {e}")
        
        @self.bot.command(name='testrecognition')
        @commands.has_permissions(administrator=True)
        async def test_recognition(ctx, *, audio_file_path: str = None):
            """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –Ω–∞ –∞—É–¥–∏–æ —Ñ–∞–π–ª–µ"""
            if not audio_file_path:
                await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –∞—É–¥–∏–æ —Ñ–∞–π–ª—É!\n"
                              "–ü—Ä–∏–º–µ—Ä: `!testrecognition test_audio.wav`")
                return
            
            if not os.path.exists(audio_file_path):
                await ctx.send(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: `{audio_file_path}`")
                return
            
            await ctx.send("üîÑ –¢–µ—Å—Ç–∏—Ä—É—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏...")
            
            try:
                text = await self.speech_recognizer.test_recognition(audio_file_path)
                
                if text:
                    embed = discord.Embed(
                        title="‚úÖ –¢–µ—Å—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏ —É—Å–ø–µ—à–µ–Ω",
                        color=discord.Color.green()
                    )
                    embed.add_field(name="–§–∞–π–ª", value=f"`{audio_file_path}`", inline=False)
                    embed.add_field(name="–†–∞—Å–ø–æ–∑–Ω–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç", value=text, inline=False)
                    embed.add_field(name="–Ø–∑—ã–∫", value=self.config.speech_language, inline=True)
                    
                    await ctx.send(embed=embed)
                else:
                    await ctx.send("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–µ—á—å –≤ —Ñ–∞–π–ª–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n"
                                  "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –∞—É–¥–∏–æ (WAV, MP3, M4A)\n"
                                  "‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞—É–¥–∏–æ (0.5-30 —Å–µ–∫—É–Ω–¥)\n"
                                  "‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏\n"
                                  "‚Ä¢ –Ø–∑—ã–∫ —Ä–µ—á–∏")
                    
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
                logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏: {e}")
        
        @self.bot.command(name='simulatevoice')
        @commands.has_permissions(administrator=True)
        async def simulate_voice(ctx, *, text: str = None):
            """–°–∏–º—É–ª–∏—Ä—É–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ (–¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏)"""
            if not text:
                await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Å–∏–º—É–ª—è—Ü–∏–∏!\n"
                              "–ü—Ä–∏–º–µ—Ä: `!simulatevoice –ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?`")
                return
            
            if not self.voice_recorder:
                await ctx.send("‚ùå –ú–æ–¥—É–ª—å –∑–∞–ø–∏—Å–∏ –≥–æ–ª–æ—Å–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω!")
                return
            
            try:
                # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏
                await self.voice_recorder.simulate_voice_recognition(
                    ctx.guild.id, ctx.author.id, text
                )
                
                await ctx.send(f"‚úÖ –°–∏–º—É–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ—á—å –∑–∞–ø–∏—Å–∞–Ω–∞: **{text}**\n"
                              f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –ª–æ–≥–æ–≤ –∫–æ–º–∞–Ω–¥–æ–π `!voicefiles`")
                
            except Exception as e:
                await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏: {e}")
                logger.error(f"–û—à–∏–±–∫–∞ —Å–∏–º—É–ª—è—Ü–∏–∏ –≥–æ–ª–æ—Å–∞: {e}")
        
        @self.bot.command(name='botinfo')
        async def bot_info(ctx):
            """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
            embed = discord.Embed(
                title="ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
                color=discord.Color.blue()
            )
            embed.add_field(name="–í–µ—Ä—Å–∏—è", value="6.0.0 (Modular Speech Bot)", inline=True)
            embed.add_field(name="–§—Ä–µ–π–º–≤–æ—Ä–∫", value="Disnake 2.9.0+", inline=True)
            embed.add_field(name="–°–µ—Ä–≤–µ—Ä–æ–≤", value=len(self.bot.guilds), inline=True)
            embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=len(self.bot.users), inline=True)
            
            channel_id = self.config.get_log_channel_id(ctx.guild.id)
            channel_info = f"<#{channel_id}>" if channel_id else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            embed.add_field(name="–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤", value=channel_info, inline=False)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ–ª–æ—Å–æ–≤–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
            if ctx.guild.voice_client:
                voice_channel = ctx.guild.voice_client.channel
                voice_info = f"üîä {voice_channel.mention}"
            else:
                voice_info = "‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω"
            
            embed.add_field(name="–ì–æ–ª–æ—Å–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", value=voice_info, inline=False)
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–∏ —Ä–µ—á–∏
            speech_info = f"üé§ {'–í–∫–ª—é—á–µ–Ω–æ' if self.config.speech_recognition else '–í—ã–∫–ª—é—á–µ–Ω–æ'} ({self.config.speech_language})"
            embed.add_field(name="–†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏", value=speech_info, inline=False)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º FFmpeg
            from modules.ffmpeg_setup import check_ffmpeg
            ffmpeg_info = "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" if check_ffmpeg() else "‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
            embed.add_field(name="FFmpeg", value=ffmpeg_info, inline=True)
            
            embed.add_field(name="–ü—Ä–µ—Ñ–∏–∫—Å", value=self.config.prefix, inline=True)
            embed.add_field(name="–ó–∞–¥–µ—Ä–∂–∫–∞", value=f"{round(self.bot.latency * 1000)}ms", inline=True)
            
            await ctx.send(embed=embed)
