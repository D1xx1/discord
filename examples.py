"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Discord Logger Bot
"""

import discord
from discord.ext import commands
import asyncio

# –ü—Ä–∏–º–µ—Ä –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞ –¥–ª—è —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö —Å–æ–±—ã—Ç–∏–π
class CustomLogger:
    def __init__(self, bot, log_channel_id):
        self.bot = bot
        self.log_channel_id = log_channel_id
    
    async def log_custom_event(self, title, description, **kwargs):
        """–ü—Ä–∏–º–µ—Ä –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞"""
        channel = self.bot.get_channel(self.log_channel_id)
        if not channel:
            return
        
        embed = discord.Embed(
            title=title,
            description=description,
            color=kwargs.get('color', discord.Color.blue()),
            timestamp=discord.utils.utcnow()
        )
        
        if 'fields' in kwargs:
            for field in kwargs['fields']:
                embed.add_field(**field)
        
        await channel.send(embed=embed)

# –ü—Ä–∏–º–µ—Ä —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –±–æ—Ç–∞ —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
class ExtendedLoggerBot(commands.Bot):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.custom_logger = None
    
    async def on_ready(self):
        print(f'{self.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
        self.custom_logger = CustomLogger(self, YOUR_LOG_CHANNEL_ID)
    
    async def on_member_ban(self, guild, user):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–Ω–æ–≤"""
        if self.custom_logger:
            await self.custom_logger.log_custom_event(
                title="üî® –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention} (`{user.id}`)",
                color=discord.Color.red(),
                fields=[
                    {"name": "–°–µ—Ä–≤–µ—Ä", "value": guild.name, "inline": True},
                    {"name": "–í—Ä–µ–º—è", "value": discord.utils.utcnow().strftime('%d.%m.%Y %H:%M:%S'), "inline": True}
                ]
            )
    
    async def on_member_unban(self, guild, user):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–±–∞–Ω–æ–≤"""
        if self.custom_logger:
            await self.custom_logger.log_custom_event(
                title="üîì –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ä–∞–∑–±–∞–Ω–µ–Ω",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {user.mention} (`{user.id}`)",
                color=discord.Color.green(),
                fields=[
                    {"name": "–°–µ—Ä–≤–µ—Ä", "value": guild.name, "inline": True},
                    {"name": "–í—Ä–µ–º—è", "value": discord.utils.utcnow().strftime('%d.%m.%Y %H:%M:%S'), "inline": True}
                ]
            )

# –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ª–æ–≥–∞
@commands.command(name='customlog')
@commands.has_permissions(administrator=True)
async def custom_log(ctx, *, message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—ã–π –ª–æ–≥"""
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log_channel_id = 1234567890123456789  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à ID –∫–∞–Ω–∞–ª–∞
    
    custom_logger = CustomLogger(ctx.bot, log_channel_id)
    await custom_logger.log_custom_event(
        title="üìù –ö–∞—Å—Ç–æ–º–Ω—ã–π –ª–æ–≥",
        description=message,
        color=discord.Color.purple(),
        fields=[
            {"name": "–ê–≤—Ç–æ—Ä –∫–æ–º–∞–Ω–¥—ã", "value": ctx.author.mention, "inline": True},
            {"name": "–°–µ—Ä–≤–µ—Ä", "value": ctx.guild.name, "inline": True}
        ]
    )
    
    await ctx.send("‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–π –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

# –ü—Ä–∏–º–µ—Ä —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
def should_log_message(message):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω—É–∂–Ω–æ –ª–∏ –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    # –ù–µ –ª–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–æ–≤
    if message.author.bot:
        return False
    
    # –ù–µ –ª–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö
    no_log_channels = ['general', 'off-topic']
    if message.channel.name in no_log_channels:
        return False
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª–∏–Ω–Ω–µ–µ 10 —Å–∏–º–≤–æ–ª–æ–≤
    if len(message.content) < 10:
        return False
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏
    if message.mentions:
        return True
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–ª–æ–∂–µ–Ω–∏—è–º–∏
    if message.attachments:
        return True
    
    return True

# –ü—Ä–∏–º–µ—Ä —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
class NotificationSystem:
    def __init__(self, bot, log_channel_id):
        self.bot = bot
        self.log_channel_id = log_channel_id
        self.notification_rules = {}
    
    def add_rule(self, event_type, condition, notification_text):
        """–î–æ–±–∞–≤–ª—è–µ—Ç –ø—Ä–∞–≤–∏–ª–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        if event_type not in self.notification_rules:
            self.notification_rules[event_type] = []
        
        self.notification_rules[event_type].append({
            'condition': condition,
            'text': notification_text
        })
    
    async def check_rules(self, event_type, data):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è —Å–æ–±—ã—Ç–∏—è"""
        if event_type not in self.notification_rules:
            return
        
        channel = self.bot.get_channel(self.log_channel_id)
        if not channel:
            return
        
        for rule in self.notification_rules[event_type]:
            if rule['condition'](data):
                embed = discord.Embed(
                    title="üö® –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
                    description=rule['text'],
                    color=discord.Color.red()
                )
                await channel.send(embed=embed)

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
def setup_notifications(bot, log_channel_id):
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    notification_system = NotificationSystem(bot, log_channel_id)
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö
    notification_system.add_rule(
        'member_join',
        lambda member: (discord.utils.utcnow() - member.created_at).days < 1,
        f"‚ö†Ô∏è –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É!"
    )
    
    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –º–∞—Å—Å–æ–≤—ã—Ö —É–¥–∞–ª–µ–Ω–∏—è—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    notification_system.add_rule(
        'message_delete',
        lambda message: len(message.content) > 100,
        f"‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–æ –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!"
    )
    
    return notification_system

if __name__ == "__main__":
    print("–≠—Ç–æ —Ñ–∞–π–ª —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Discord Logger Bot")
    print("–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≤–∞—à –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞")
