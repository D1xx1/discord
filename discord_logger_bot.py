import discord
from discord.ext import commands
import asyncio
import logging
from datetime import datetime
import json
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
class BotConfig:
    def __init__(self):
        self.token = os.getenv('DISCORD_BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')
        self.log_channel_id = int(os.getenv('LOG_CHANNEL_ID', '0'))
        self.prefix = os.getenv('BOT_PREFIX', '!')
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if os.path.exists('config.json'):
            with open('config.json', 'r', encoding='utf-8') as f:
                config = json.load(f)
                self.token = config.get('token', self.token)
                self.log_channel_id = config.get('log_channel_id', self.log_channel_id)
                self.prefix = config.get('prefix', self.prefix)

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = BotConfig()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
intents.voice_states = True
intents.guild_messages = True
intents.dm_messages = True

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
bot = commands.Bot(command_prefix=config.prefix, intents=intents)

class LoggerBot:
    def __init__(self, bot):
        self.bot = bot
        self.log_channel = None
        
    async def get_log_channel(self):
        """–ü–æ–ª—É—á–∞–µ–º –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤"""
        if not self.log_channel and config.log_channel_id:
            try:
                self.log_channel = self.bot.get_channel(config.log_channel_id)
                if not self.log_channel:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {config.log_channel_id}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤: {e}")
        return self.log_channel
    
    async def send_log(self, title, description, color=discord.Color.blue(), fields=None, thumbnail=None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥ –≤ –∫–∞–Ω–∞–ª"""
        log_channel = await self.get_log_channel()
        if not log_channel:
            logger.warning("–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω, –ª–æ–≥ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            return
            
        embed = discord.Embed(
            title=title,
            description=description,
            color=color,
            timestamp=datetime.utcnow()
        )
        
        if fields:
            for name, value, inline in fields:
                embed.add_field(name=name, value=value, inline=inline)
        
        if thumbnail:
            embed.set_thumbnail(url=thumbnail)
            
        try:
            await log_channel.send(embed=embed)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞: {e}")

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
logger_bot = LoggerBot(bot)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info(f'{bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    logger.info(f'–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ {len(bot.guilds)} —Å–µ—Ä–≤–µ—Ä–∞–º')
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    await bot.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.watching, 
            name="–∑–∞ –ª–æ–≥–∞–º–∏ —Å–µ—Ä–≤–µ—Ä–∞"
        )
    )

@bot.event
async def on_message(message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.author.bot:
        return
        
    # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    if message.content.startswith(config.prefix):
        await bot.process_commands(message)
        return
    
    # –õ–æ–≥–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if message.guild:  # –¢–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        await logger_bot.send_log(
            title="üìù –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
            description=f"**–ê–≤—Ç–æ—Ä:** {message.author.mention}\n**–ö–∞–Ω–∞–ª:** {message.channel.mention}\n**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:** {message.content[:1000]}",
            color=discord.Color.green(),
            fields=[
                ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(message.id), True),
                ("ID –∞–≤—Ç–æ—Ä–∞", str(message.author.id), True),
                ("ID –∫–∞–Ω–∞–ª–∞", str(message.channel.id), True)
            ],
            thumbnail=message.author.display_avatar.url
        )

@bot.event
async def on_message_delete(message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.author.bot:
        return
        
    await logger_bot.send_log(
        title="üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",
        description=f"**–ê–≤—Ç–æ—Ä:** {message.author.mention}\n**–ö–∞–Ω–∞–ª:** {message.channel.mention}\n**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:** {message.content[:1000] if message.content else '–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞'}",
        color=discord.Color.red(),
        fields=[
            ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(message.id), True),
            ("ID –∞–≤—Ç–æ—Ä–∞", str(message.author.id), True),
            ("ID –∫–∞–Ω–∞–ª–∞", str(message.channel.id), True)
        ],
        thumbnail=message.author.display_avatar.url
    )

@bot.event
async def on_message_edit(before, after):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if before.author.bot or before.content == after.content:
        return
        
    await logger_bot.send_log(
        title="‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ",
        description=f"**–ê–≤—Ç–æ—Ä:** {before.author.mention}\n**–ö–∞–Ω–∞–ª:** {before.channel.mention}",
        color=discord.Color.orange(),
        fields=[
            ("–ë—ã–ª–æ", before.content[:1000] if before.content else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞", False),
            ("–°—Ç–∞–ª–æ", after.content[:1000] if after.content else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞", False),
            ("ID —Å–æ–æ–±—â–µ–Ω–∏—è", str(before.id), True),
            ("ID –∞–≤—Ç–æ—Ä–∞", str(before.author.id), True)
        ],
        thumbnail=before.author.display_avatar.url
    )

@bot.event
async def on_member_join(member):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    await logger_bot.send_log(
        title="üëã –£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è",
        description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n**–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω:** {member.created_at.strftime('%d.%m.%Y %H:%M:%S')}",
        color=discord.Color.green(),
        fields=[
            ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(member.id), True),
            ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", str(member.guild.member_count), True)
        ],
        thumbnail=member.display_avatar.url
    )

@bot.event
async def on_member_remove(member):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    await logger_bot.send_log(
        title="üëã –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä",
        description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n**–ë—ã–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å:** {member.joined_at.strftime('%d.%m.%Y %H:%M:%S') if member.joined_at else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}",
        color=discord.Color.red(),
        fields=[
            ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(member.id), True),
            ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", str(member.guild.member_count), True)
        ],
        thumbnail=member.display_avatar.url
    )

@bot.event
async def on_member_update(before, after):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    changes = []
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞
    if before.nick != after.nick:
        changes.append(f"**–ù–∏–∫–Ω–µ–π–º:** {before.nick or '–ù–µ—Ç'} ‚Üí {after.nick or '–ù–µ—Ç'}")
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
    if before.roles != after.roles:
        added_roles = [role for role in after.roles if role not in before.roles]
        removed_roles = [role for role in before.roles if role not in after.roles]
        
        if added_roles:
            changes.append(f"**–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏:** {', '.join([role.mention for role in added_roles])}")
        if removed_roles:
            changes.append(f"**–£–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏:** {', '.join([role.mention for role in removed_roles])}")
    
    if changes:
        await logger_bot.send_log(
            title="üë§ –£—á–∞—Å—Ç–Ω–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {after.mention}\n" + "\n".join(changes),
            color=discord.Color.blue(),
            fields=[
                ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(after.id), True)
            ],
            thumbnail=after.display_avatar.url
        )

@bot.event
async def on_guild_channel_create(channel):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
    await logger_bot.send_log(
        title="üìÅ –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω",
        description=f"**–ö–∞–Ω–∞–ª:** {channel.mention}\n**–¢–∏–ø:** {channel.type.name}",
        color=discord.Color.green(),
        fields=[
            ("ID –∫–∞–Ω–∞–ª–∞", str(channel.id), True),
            ("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", channel.category.name if channel.category else "–ù–µ—Ç", True)
        ]
    )

@bot.event
async def on_guild_channel_delete(channel):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
    await logger_bot.send_log(
        title="üóëÔ∏è –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω",
        description=f"**–ö–∞–Ω–∞–ª:** #{channel.name}\n**–¢–∏–ø:** {channel.type.name}",
        color=discord.Color.red(),
        fields=[
            ("ID –∫–∞–Ω–∞–ª–∞", str(channel.id), True),
            ("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", channel.category.name if channel.category else "–ù–µ—Ç", True)
        ]
    )

@bot.event
async def on_guild_role_create(role):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏"""
    await logger_bot.send_log(
        title="üé≠ –†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞",
        description=f"**–†–æ–ª—å:** {role.mention}\n**–¶–≤–µ—Ç:** {role.color}",
        color=discord.Color.green(),
        fields=[
            ("ID —Ä–æ–ª–∏", str(role.id), True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(role.position), True),
            ("–†–∞–∑—Ä–µ—à–µ–Ω–∏—è", str(role.permissions.value), False)
        ]
    )

@bot.event
async def on_guild_role_delete(role):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏"""
    await logger_bot.send_log(
        title="üóëÔ∏è –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞",
        description=f"**–†–æ–ª—å:** {role.name}",
        color=discord.Color.red(),
        fields=[
            ("ID —Ä–æ–ª–∏", str(role.id), True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(role.position), True)
        ]
    )

@bot.event
async def on_voice_state_update(member, before, after):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    if before.channel != after.channel:
        if before.channel is None:
            # –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
            await logger_bot.send_log(
                title="üé§ –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n**–ö–∞–Ω–∞–ª:** {after.channel.mention}",
                color=discord.Color.green(),
                fields=[
                    ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(member.id), True),
                    ("ID –∫–∞–Ω–∞–ª–∞", str(after.channel.id), True)
                ],
                thumbnail=member.display_avatar.url
            )
        elif after.channel is None:
            # –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            await logger_bot.send_log(
                title="üé§ –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n**–ö–∞–Ω–∞–ª:** {before.channel.mention}",
                color=discord.Color.red(),
                fields=[
                    ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(member.id), True),
                    ("ID –∫–∞–Ω–∞–ª–∞", str(before.channel.id), True)
                ],
                thumbnail=member.display_avatar.url
            )
        else:
            # –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
            await logger_bot.send_log(
                title="üé§ –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
                description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {member.mention}\n**–ò–∑:** {before.channel.mention}\n**–í:** {after.channel.mention}",
                color=discord.Color.blue(),
                fields=[
                    ("ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", str(member.id), True)
                ],
                thumbnail=member.display_avatar.url
            )

# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
@bot.command(name='setlogchannel')
@commands.has_permissions(administrator=True)
async def set_log_channel(ctx, channel: discord.TextChannel):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤"""
    config.log_channel_id = channel.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_data = {
        'token': config.token,
        'log_channel_id': config.log_channel_id,
        'prefix': config.prefix
    }
    
    with open('config.json', 'w', encoding='utf-8') as f:
        json.dump(config_data, f, indent=4)
    
    logger_bot.log_channel = channel
    await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {channel.mention}")

@bot.command(name='testlog')
@commands.has_permissions(administrator=True)
async def test_log(ctx):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ª–æ–≥–∞"""
    await logger_bot.send_log(
        title="üß™ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥",
        description="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        color=discord.Color.gold(),
        fields=[
            ("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", ctx.author.mention, True),
            ("–í—Ä–µ–º—è", datetime.now().strftime('%d.%m.%Y %H:%M:%S'), True)
        ]
    )
    await ctx.send("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

@bot.command(name='botinfo')
async def bot_info(ctx):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    embed = discord.Embed(
        title="ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
        color=discord.Color.blue()
    )
    embed.add_field(name="–í–µ—Ä—Å–∏—è", value="1.0.0", inline=True)
    embed.add_field(name="–°–µ—Ä–≤–µ—Ä–æ–≤", value=len(bot.guilds), inline=True)
    embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=len(bot.users), inline=True)
    embed.add_field(name="–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤", value=f"<#{config.log_channel_id}>" if config.log_channel_id else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω", inline=False)
    embed.add_field(name="–ü—Ä–µ—Ñ–∏–∫—Å", value=config.prefix, inline=True)
    embed.add_field(name="–ó–∞–¥–µ—Ä–∂–∫–∞", value=f"{round(bot.latency * 1000)}ms", inline=True)
    
    await ctx.send(embed=embed)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
    elif isinstance(error, commands.CommandNotFound):
        pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    else:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã {ctx.command}: {error}")
        await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!")

if __name__ == "__main__":
    if config.token == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DISCORD_BOT_TOKEN –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ config.json")
        exit(1)
    
    try:
        bot.run(config.token)
    except discord.LoginFailure:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
