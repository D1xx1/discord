import discord
from discord.ext import commands
import asyncio
import logging
from datetime import datetime, timedelta
import json
import os
import re
from typing import Optional, List, Dict

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('bot.log', encoding='utf-8'),
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)

class MultiServerConfig:
    def __init__(self):
        self.token = os.getenv('DISCORD_BOT_TOKEN', 'YOUR_BOT_TOKEN_HERE')
        self.prefix = os.getenv('BOT_PREFIX', '!')
        self.log_messages = os.getenv('LOG_MESSAGES', 'true').lower() == 'true'
        self.log_voice = os.getenv('LOG_VOICE', 'true').lower() == 'true'
        self.log_members = os.getenv('LOG_MEMBERS', 'true').lower() == 'true'
        self.log_channels = os.getenv('LOG_CHANNELS', 'true').lower() == 'true'
        self.log_roles = os.getenv('LOG_ROLES', 'true').lower() == 'true'
        
        # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤ –ª–æ–≥–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        self.server_log_channels = {}  # {guild_id: channel_id}
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞
        if os.path.exists('multi_server_config.json'):
            with open('multi_server_config.json', 'r', encoding='utf-8') as f:
                config = json.load(f)
                self.token = config.get('token', self.token)
                self.prefix = config.get('prefix', self.prefix)
                self.log_messages = config.get('log_messages', self.log_messages)
                self.log_voice = config.get('log_voice', self.log_voice)
                self.log_members = config.get('log_members', self.log_members)
                self.log_channels = config.get('log_channels', self.log_channels)
                self.log_roles = config.get('log_roles', self.log_roles)
                self.server_log_channels = config.get('server_log_channels', {})
    
    def get_log_channel_id(self, guild_id: int) -> Optional[int]:
        """–ü–æ–ª—É—á–∞–µ—Ç ID –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        return self.server_log_channels.get(str(guild_id))
    
    def set_log_channel_id(self, guild_id: int, channel_id: int):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ID –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        self.server_log_channels[str(guild_id)] = channel_id
        self.save_config()
    
    def save_config(self):
        """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–∞–π–ª"""
        config_data = {
            'token': self.token,
            'prefix': self.prefix,
            'log_messages': self.log_messages,
            'log_voice': self.log_voice,
            'log_members': self.log_members,
            'log_channels': self.log_channels,
            'log_roles': self.log_roles,
            'server_log_channels': self.server_log_channels
        }
        
        with open('multi_server_config.json', 'w', encoding='utf-8') as f:
            json.dump(config_data, f, indent=4)

config = MultiServerConfig()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True
intents.voice_states = True
intents.guild_messages = True
intents.dm_messages = True
intents.guild_reactions = True

bot = commands.Bot(command_prefix=config.prefix, intents=intents)

class MultiServerLoggerBot:
    def __init__(self, bot):
        self.bot = bot
        self.rate_limits = {}  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —á–∞—Å—Ç–æ—Ç—É –ª–æ–≥–æ–≤
        
    async def get_log_channel(self, guild_id: int) -> Optional[discord.TextChannel]:
        """–ü–æ–ª—É—á–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        channel_id = config.get_log_channel_id(guild_id)
        if not channel_id:
            return None
            
        try:
            channel = self.bot.get_channel(channel_id)
            if not channel:
                logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–∞–Ω–∞–ª —Å ID {channel_id} –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}")
            return channel
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}: {e}")
            return None
    
    def is_rate_limited(self, event_type: str, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–µ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏ –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã –¥–ª—è —Å–æ–±—ã—Ç–∏—è"""
        now = datetime.utcnow()
        key = f"{event_type}_{user_id}"
        
        if key not in self.rate_limits:
            self.rate_limits[key] = []
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏ (—Å—Ç–∞—Ä—à–µ 1 –º–∏–Ω—É—Ç—ã)
        self.rate_limits[key] = [
            timestamp for timestamp in self.rate_limits[key]
            if now - timestamp < timedelta(minutes=1)
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç (–º–∞–∫—Å–∏–º—É–º 5 —Å–æ–±—ã—Ç–∏–π –≤ –º–∏–Ω—É—Ç—É)
        if len(self.rate_limits[key]) >= 5:
            return True
        
        self.rate_limits[key].append(now)
        return False
    
    async def send_log(self, guild_id: int, title: str, description: str, 
                      color: discord.Color = discord.Color.blue(), 
                      fields: List[tuple] = None, thumbnail: str = None, 
                      image: str = None, footer: str = None):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥ –≤ –∫–∞–Ω–∞–ª –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
        log_channel = await self.get_log_channel(guild_id)
        if not log_channel:
            logger.warning(f"–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {guild_id}, –ª–æ–≥ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
            return
            
        embed = discord.Embed(
            title=title,
            description=description,
            color=color,
            timestamp=datetime.utcnow()
        )
        
        if fields:
            for name, value, inline in fields:
                if len(str(value)) > 1024:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Discord
                    value = str(value)[:1021] + "..."
                embed.add_field(name=name, value=value, inline=inline)
        
        if thumbnail:
            embed.set_thumbnail(url=thumbnail)
        
        if image:
            embed.set_image(url=image)
            
        if footer:
            embed.set_footer(text=footer)
        else:
            embed.set_footer(text=f"–°–µ—Ä–≤–µ—Ä: {guild_id} | ID: {datetime.utcnow().timestamp()}")
            
        try:
            await log_channel.send(embed=embed)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–æ–≥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild_id}: {e}")
    
    def format_user_info(self, user: discord.User) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"""
        return f"{user.mention} (`{user.id}`)\n{user.name}#{user.discriminator}"
    
    def format_channel_info(self, channel: discord.TextChannel) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–∞–Ω–∞–ª–µ"""
        category = f" –≤ {channel.category.name}" if channel.category else ""
        return f"{channel.mention} (`{channel.id}`){category}"

logger_bot = MultiServerLoggerBot(bot)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    logger.info(f'{bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    logger.info(f'–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ {len(bot.guilds)} —Å–µ—Ä–≤–µ—Ä–∞–º')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –ª–æ–≥–æ–≤
    for guild in bot.guilds:
        channel_id = config.get_log_channel_id(guild.id)
        if channel_id:
            channel = bot.get_channel(channel_id)
            channel_name = channel.name if channel else "–ù–µ –Ω–∞–π–¥–µ–Ω"
            logger.info(f"–°–µ—Ä–≤–µ—Ä {guild.name}: –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ #{channel_name}")
        else:
            logger.info(f"–°–µ—Ä–≤–µ—Ä {guild.name}: –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
    await bot.change_presence(
        activity=discord.Activity(
            type=discord.ActivityType.watching, 
            name="–∑–∞ –≤—Å–µ–º–∏"
        )
    )

@bot.event
async def on_message(message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.author.bot or not config.log_messages:
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã
    if message.content.startswith(config.prefix):
        await bot.process_commands(message)
        return
    
    # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö
    if message.guild and isinstance(message.channel, discord.TextChannel):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç —á–∞—Å—Ç–æ—Ç—ã
        if logger_bot.is_rate_limited("message", message.author.id):
            return
            
        # –õ–æ–≥–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        if len(message.content) > 10 or message.attachments or message.embeds:
            await logger_bot.send_log(
                guild_id=message.guild.id,
                title="üìù –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ",
                description=f"**–ê–≤—Ç–æ—Ä:** {logger_bot.format_user_info(message.author)}\n**–ö–∞–Ω–∞–ª:** {logger_bot.format_channel_info(message.channel)}",
                color=discord.Color.green(),
                fields=[
                    ("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ", message.content[:1000] if message.content else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞", False),
                    ("–í–ª–æ–∂–µ–Ω–∏—è", f"{len(message.attachments)} —Ñ–∞–π–ª(–æ–≤)" if message.attachments else "–ù–µ—Ç", True),
                    ("–≠–º–±–µ–¥—ã", f"{len(message.embeds)} —ç–º–±–µ–¥(–æ–≤)" if message.embeds else "–ù–µ—Ç", True)
                ],
                thumbnail=message.author.display_avatar.url
            )

@bot.event
async def on_message_delete(message):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if message.author.bot or not config.log_messages or not message.guild:
        return
        
    await logger_bot.send_log(
        guild_id=message.guild.id,
        title="üóëÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ",
        description=f"**–ê–≤—Ç–æ—Ä:** {logger_bot.format_user_info(message.author)}\n**–ö–∞–Ω–∞–ª:** {logger_bot.format_channel_info(message.channel)}",
        color=discord.Color.red(),
        fields=[
            ("–°–æ–¥–µ—Ä–∂–∏–º–æ–µ", message.content[:1000] if message.content else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞", False),
            ("–í–ª–æ–∂–µ–Ω–∏—è", f"{len(message.attachments)} —Ñ–∞–π–ª(–æ–≤)" if message.attachments else "–ù–µ—Ç", True),
            ("–í—Ä–µ–º—è —Å–æ–∑–¥–∞–Ω–∏—è", message.created_at.strftime('%d.%m.%Y %H:%M:%S'), True)
        ],
        thumbnail=message.author.display_avatar.url
    )

@bot.event
async def on_message_edit(before, after):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    if before.author.bot or before.content == after.content or not config.log_messages or not before.guild:
        return
        
    await logger_bot.send_log(
        guild_id=before.guild.id,
        title="‚úèÔ∏è –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ",
        description=f"**–ê–≤—Ç–æ—Ä:** {logger_bot.format_user_info(before.author)}\n**–ö–∞–Ω–∞–ª:** {logger_bot.format_channel_info(before.channel)}",
        color=discord.Color.orange(),
        fields=[
            ("–ë—ã–ª–æ", before.content[:1000] if before.content else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞", False),
            ("–°—Ç–∞–ª–æ", after.content[:1000] if after.content else "–ù–µ—Ç —Ç–µ–∫—Å—Ç–∞", False),
            ("–í—Ä–µ–º—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
        ],
        thumbnail=before.author.display_avatar.url
    )

@bot.event
async def on_member_join(member):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    if not config.log_members or not member.guild:
        return
        
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–æ–≤—ã–π –ª–∏ —ç—Ç–æ –∞–∫–∫–∞—É–Ω—Ç (–º–ª–∞–¥—à–µ 7 –¥–Ω–µ–π)
    account_age = datetime.utcnow() - member.created_at
    is_new_account = account_age < timedelta(days=7)
    
    await logger_bot.send_log(
        guild_id=member.guild.id,
        title="üëã –£—á–∞—Å—Ç–Ω–∏–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è",
        description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {logger_bot.format_user_info(member)}",
        color=discord.Color.green() if not is_new_account else discord.Color.orange(),
        fields=[
            ("–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω", member.created_at.strftime('%d.%m.%Y %H:%M:%S'), True),
            ("–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞", f"{account_age.days} –¥–Ω–µ–π", True),
            ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", str(member.guild.member_count), True),
            ("–ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç", "‚ö†Ô∏è –î–∞" if is_new_account else "–ù–µ—Ç", True)
        ],
        thumbnail=member.display_avatar.url,
        footer="‚ö†Ô∏è –ù–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç" if is_new_account else None
    )

@bot.event
async def on_member_remove(member):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    if not config.log_members or not member.guild:
        return
        
    # –í—ã—á–∏—Å–ª—è–µ–º –≤—Ä–µ–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    time_on_server = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    if member.joined_at:
        time_on_server = str(datetime.utcnow() - member.joined_at).split('.')[0]
    
    await logger_bot.send_log(
        guild_id=member.guild.id,
        title="üëã –£—á–∞—Å—Ç–Ω–∏–∫ –ø–æ–∫–∏–Ω—É–ª —Å–µ—Ä–≤–µ—Ä",
        description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {logger_bot.format_user_info(member)}",
        color=discord.Color.red(),
        fields=[
            ("–ë—ã–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å", member.joined_at.strftime('%d.%m.%Y %H:%M:%S') if member.joined_at else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ", True),
            ("–í—Ä–µ–º—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", time_on_server, True),
            ("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", str(member.guild.member_count), True)
        ],
        thumbnail=member.display_avatar.url
    )

@bot.event
async def on_member_update(before, after):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    if not config.log_members or not after.guild:
        return
        
    changes = []
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∏–∫–Ω–µ–π–º–∞
    if before.nick != after.nick:
        changes.append(f"**–ù–∏–∫–Ω–µ–π–º:** {before.nick or '–ù–µ—Ç'} ‚Üí {after.nick or '–ù–µ—Ç'}")
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π
    if before.roles != after.roles:
        added_roles = [role for role in after.roles if role not in before.roles]
        removed_roles = [role for role in before.roles if role not in after.roles]
        
        if added_roles:
            changes.append(f"**–î–æ–±–∞–≤–ª–µ–Ω—ã —Ä–æ–ª–∏:** {', '.join([role.mention for role in added_roles])}")
        if removed_roles:
            changes.append(f"**–£–¥–∞–ª–µ–Ω—ã —Ä–æ–ª–∏:** {', '.join([role.mention for role in removed_roles])}")
    
    # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–≤–∞—Ç–∞—Ä–∞
    if before.display_avatar.url != after.display_avatar.url:
        changes.append("**–ê–≤–∞—Ç–∞—Ä –∏–∑–º–µ–Ω–µ–Ω**")
    
    if changes:
        await logger_bot.send_log(
            guild_id=after.guild.id,
            title="üë§ –£—á–∞—Å—Ç–Ω–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {logger_bot.format_user_info(after)}\n" + "\n".join(changes),
            color=discord.Color.blue(),
            fields=[
                ("–í—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
            ],
            thumbnail=after.display_avatar.url
        )

@bot.event
async def on_guild_channel_create(channel):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
    if not config.log_channels or not channel.guild:
        return
        
    await logger_bot.send_log(
        guild_id=channel.guild.id,
        title="üìÅ –ö–∞–Ω–∞–ª —Å–æ–∑–¥–∞–Ω",
        description=f"**–ö–∞–Ω–∞–ª:** {channel.mention} (`{channel.id}`)\n**–¢–∏–ø:** {channel.type.name}",
        color=discord.Color.green(),
        fields=[
            ("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", channel.category.name if channel.category else "–ù–µ—Ç", True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(channel.position), True)
        ]
    )

@bot.event
async def on_guild_channel_delete(channel):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
    if not config.log_channels or not channel.guild:
        return
        
    await logger_bot.send_log(
        guild_id=channel.guild.id,
        title="üóëÔ∏è –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω",
        description=f"**–ö–∞–Ω–∞–ª:** #{channel.name} (`{channel.id}`)\n**–¢–∏–ø:** {channel.type.name}",
        color=discord.Color.red(),
        fields=[
            ("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", channel.category.name if channel.category else "–ù–µ—Ç", True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(channel.position), True)
        ]
    )

@bot.event
async def on_guild_role_create(role):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–æ–ª–∏"""
    if not config.log_roles or not role.guild:
        return
        
    await logger_bot.send_log(
        guild_id=role.guild.id,
        title="üé≠ –†–æ–ª—å —Å–æ–∑–¥–∞–Ω–∞",
        description=f"**–†–æ–ª—å:** {role.mention} (`{role.id}`)",
        color=discord.Color.green(),
        fields=[
            ("–¶–≤–µ—Ç", str(role.color), True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(role.position), True),
            ("–†–∞–∑—Ä–µ—à–µ–Ω–∏—è", f"{len([p for p in role.permissions if p[1]])} —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π", True),
            ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", str(len(role.members)), True)
        ]
    )

@bot.event
async def on_guild_role_delete(role):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —Ä–æ–ª–∏"""
    if not config.log_roles or not role.guild:
        return
        
    await logger_bot.send_log(
        guild_id=role.guild.id,
        title="üóëÔ∏è –†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞",
        description=f"**–†–æ–ª—å:** {role.name} (`{role.id}`)",
        color=discord.Color.red(),
        fields=[
            ("–¶–≤–µ—Ç", str(role.color), True),
            ("–ü–æ–∑–∏—Ü–∏—è", str(role.position), True),
            ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –±—ã–ª–æ", str(len(role.members)), True)
        ]
    )

@bot.event
async def on_voice_state_update(member, before, after):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
    if not config.log_voice or before.channel == after.channel or not member.guild:
        return
        
    if before.channel is None:
        # –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É
        await logger_bot.send_log(
            guild_id=member.guild.id,
            title="üé§ –ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {logger_bot.format_user_info(member)}\n**–ö–∞–Ω–∞–ª:** {after.channel.mention}",
            color=discord.Color.green(),
            fields=[
                ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(after.channel.members)), True)
            ],
            thumbnail=member.display_avatar.url
        )
    elif after.channel is None:
        # –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
        await logger_bot.send_log(
            guild_id=member.guild.id,
            title="üé§ –û—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {logger_bot.format_user_info(member)}\n**–ö–∞–Ω–∞–ª:** {before.channel.mention}",
            color=discord.Color.red(),
            fields=[
                ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(before.channel.members)), True)
            ],
            thumbnail=member.display_avatar.url
        )
    else:
        # –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª
        await logger_bot.send_log(
            guild_id=member.guild.id,
            title="üé§ –ü–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª",
            description=f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {logger_bot.format_user_info(member)}",
            color=discord.Color.blue(),
            fields=[
                ("–ò–∑", before.channel.mention, True),
                ("–í", after.channel.mention, True),
                ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –Ω–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ", str(len(after.channel.members)), True)
            ],
            thumbnail=member.display_avatar.url
        )

@bot.event
async def on_voice_client_disconnect(voice_client):
    """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
    if not voice_client.guild:
        return
        
    await logger_bot.send_log(
        guild_id=voice_client.guild.id,
        title="üé§ –ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
        description=f"**–ö–∞–Ω–∞–ª:** {voice_client.channel.mention if voice_client.channel else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n**–ü—Ä–∏—á–∏–Ω–∞:** –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ",
        color=discord.Color.orange(),
        fields=[
            ("–í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
        ]
    )

# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
@bot.command(name='setlogchannel')
@commands.has_permissions(administrator=True)
async def set_log_channel(ctx, channel: discord.TextChannel):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ –Ω–∞ —Ç–µ–∫—É—â–µ–º —Å–µ—Ä–≤–µ—Ä–µ"""
    config.set_log_channel_id(ctx.guild.id, channel.id)
    
    await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª –¥–ª—è –ª–æ–≥–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {channel.mention}\n"
                  f"–¢–µ–ø–µ—Ä—å –≤—Å–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ **{ctx.guild.name}** –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!")

@bot.command(name='removelogchannel')
@commands.has_permissions(administrator=True)
async def remove_log_channel(ctx):
    """–£–¥–∞–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∫–∞–Ω–∞–ª–∞ –ª–æ–≥–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    if str(ctx.guild.id) in config.server_log_channels:
        del config.server_log_channels[str(ctx.guild.id)]
        config.save_config()
        await ctx.send(f"‚úÖ –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ —É–¥–∞–ª–µ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ **{ctx.guild.name}**")
    else:
        await ctx.send(f"‚ùå –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –±—ã–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ **{ctx.guild.name}**")

@bot.command(name='togglelogs')
@commands.has_permissions(administrator=True)
async def toggle_logs(ctx, log_type: str):
    """–í–∫–ª—é—á–∞–µ—Ç/–≤—ã–∫–ª—é—á–∞–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ç–∏–ø –ª–æ–≥–æ–≤ (–≥–ª–æ–±–∞–ª—å–Ω–æ)"""
    log_type = log_type.lower()
    valid_types = ['messages', 'voice', 'members', 'channels', 'roles']
    
    if log_type not in valid_types:
        await ctx.send(f"‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –ª–æ–≥–æ–≤. –î–æ—Å—Ç—É–ø–Ω—ã–µ: {', '.join(valid_types)}")
        return
    
    # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    setattr(config, f'log_{log_type}', not getattr(config, f'log_{log_type}'))
    config.save_config()
    
    status = "–≤–∫–ª—é—á–µ–Ω—ã" if getattr(config, f'log_{log_type}') else "–≤—ã–∫–ª—é—á–µ–Ω—ã"
    await ctx.send(f"‚úÖ –õ–æ–≥–∏ —Ç–∏–ø–∞ '{log_type}' {status} –¥–ª—è –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤")

@bot.command(name='testlog')
@commands.has_permissions(administrator=True)
async def test_log(ctx):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ª–æ–≥–∞ –Ω–∞ —Ç–µ–∫—É—â–µ–º —Å–µ—Ä–≤–µ—Ä–µ"""
    await logger_bot.send_log(
        guild_id=ctx.guild.id,
        title="üß™ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥",
        description="–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        color=discord.Color.gold(),
        fields=[
            ("–ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", ctx.author.mention, True),
            ("–í—Ä–µ–º—è", datetime.now().strftime('%d.%m.%Y %H:%M:%S'), True),
            ("–°–µ—Ä–≤–µ—Ä", ctx.guild.name, True)
        ],
        footer="–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"
    )
    await ctx.send("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ª–æ–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")

@bot.command(name='logstatus')
@commands.has_permissions(administrator=True)
async def log_status(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –ª–æ–≥–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"""
    embed = discord.Embed(
        title="üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è",
        color=discord.Color.blue()
    )
    
    status_emoji = {True: "‚úÖ", False: "‚ùå"}
    
    embed.add_field(
        name="–¢–∏–ø—ã –ª–æ–≥–æ–≤",
        value=f"{status_emoji[config.log_messages]} –°–æ–æ–±—â–µ–Ω–∏—è\n"
              f"{status_emoji[config.log_voice]} –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
              f"{status_emoji[config.log_members]} –£—á–∞—Å—Ç–Ω–∏–∫–∏\n"
              f"{status_emoji[config.log_channels]} –ö–∞–Ω–∞–ª—ã\n"
              f"{status_emoji[config.log_roles]} –†–æ–ª–∏",
        inline=True
    )
    
    channel_id = config.get_log_channel_id(ctx.guild.id)
    channel_info = f"<#{channel_id}>" if channel_id else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    
    embed.add_field(
        name="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞",
        value=f"**–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤:** {channel_info}\n"
              f"**–ü—Ä–µ—Ñ–∏–∫—Å:** {config.prefix}\n"
              f"**–°–µ—Ä–≤–µ—Ä–æ–≤:** {len(bot.guilds)}",
        inline=True
    )
    
    await ctx.send(embed=embed)

@bot.command(name='serverlist')
@commands.has_permissions(administrator=True)
async def server_list(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –∏—Ö –∫–∞–Ω–∞–ª–æ–≤ –ª–æ–≥–æ–≤"""
    embed = discord.Embed(
        title="üåê –°–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤",
        description=f"–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ {len(bot.guilds)} —Å–µ—Ä–≤–µ—Ä–∞–º",
        color=discord.Color.blue()
    )
    
    for guild in bot.guilds:
        channel_id = config.get_log_channel_id(guild.id)
        if channel_id:
            channel = bot.get_channel(channel_id)
            channel_name = f"#{channel.name}" if channel else "–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
            status = "‚úÖ"
        else:
            channel_name = "–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
            status = "‚ùå"
        
        embed.add_field(
            name=f"{status} {guild.name}",
            value=f"**–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤:** {channel_name}\n**–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {guild.member_count}",
            inline=True
        )
    
    await ctx.send(embed=embed)

@bot.command(name='joinvoice')
@commands.has_permissions(administrator=True)
async def join_voice(ctx, *, channel: discord.VoiceChannel = None):
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞ –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É"""
    if not channel:
        # –ï—Å–ª–∏ –∫–∞–Ω–∞–ª –Ω–µ —É–∫–∞–∑–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∫–∞–Ω–∞–ª—É –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–∞–Ω–¥—ã
        if ctx.author.voice and ctx.author.voice.channel:
            channel = ctx.author.voice.channel
        else:
            await ctx.send("‚ùå –£–∫–∞–∂–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –∏–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
            return
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–∫–ª—é—á–µ–Ω –ª–∏ —É–∂–µ –±–æ—Ç –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ
        if ctx.guild.voice_client:
            await ctx.guild.voice_client.disconnect()
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –∫–∞–Ω–∞–ª—É
        voice_client = await channel.connect()
        
        await logger_bot.send_log(
            guild_id=ctx.guild.id,
            title="üé§ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É",
            description=f"**–ö–∞–Ω–∞–ª:** {channel.mention}\n**–ü–æ–¥–∫–ª—é—á–∏–ª:** {ctx.author.mention}",
            color=discord.Color.green(),
            fields=[
                ("–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ", str(len(channel.members)), True),
                ("–í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
            ]
        )
        
        await ctx.send(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É {channel.mention}!")
        
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: {e}")

@bot.command(name='leavevoice')
@commands.has_permissions(administrator=True)
async def leave_voice(ctx):
    """–û—Ç–∫–ª—é—á–∞–µ—Ç –±–æ—Ç–∞ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞"""
    if not ctx.guild.voice_client:
        await ctx.send("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
        return
    
    try:
        channel = ctx.guild.voice_client.channel
        await ctx.guild.voice_client.disconnect()
        
        await logger_bot.send_log(
            guild_id=ctx.guild.id,
            title="üé§ –ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞",
            description=f"**–ö–∞–Ω–∞–ª:** {channel.mention}\n**–û—Ç–∫–ª—é—á–∏–ª:** {ctx.author.mention}",
            color=discord.Color.red(),
            fields=[
                ("–í—Ä–µ–º—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è", datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), True)
            ]
        )
        
        await ctx.send("‚úÖ –ë–æ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞!")
        
    except Exception as e:
        await ctx.send(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞: {e}")

@bot.command(name='voiceinfo')
@commands.has_permissions(administrator=True)
async def voice_info(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥–æ–ª–æ—Å–æ–≤–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏"""
    if not ctx.guild.voice_client:
        await ctx.send("‚ùå –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É!")
        return
    
    voice_client = ctx.guild.voice_client
    channel = voice_client.channel
    
    embed = discord.Embed(
        title="üé§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ–ª–æ—Å–æ–≤–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏",
        color=discord.Color.blue()
    )
    
    embed.add_field(name="–ö–∞–Ω–∞–ª", value=channel.mention, inline=True)
    embed.add_field(name="–°—Ç–∞—Ç—É—Å", value="–ü–æ–¥–∫–ª—é—á–µ–Ω", inline=True)
    embed.add_field(name="–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=str(len(channel.members)), inline=True)
    
    embed.add_field(name="–ó–∞–¥–µ—Ä–∂–∫–∞", value=f"{round(voice_client.latency * 1000)}ms", inline=True)
    embed.add_field(name="–ì—Ä–æ–º–∫–æ—Å—Ç—å", value=f"{voice_client.source.volume * 100:.0f}%" if voice_client.source else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ", inline=True)
    embed.add_field(name="–í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", value=datetime.utcnow().strftime('%d.%m.%Y %H:%M:%S'), inline=True)
    
    await ctx.send(embed=embed)

@bot.command(name='voiceactivity')
@commands.has_permissions(administrator=True)
async def voice_activity(ctx):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–æ –≤—Å–µ—Ö –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö —Å–µ—Ä–≤–µ—Ä–∞"""
    voice_channels = [ch for ch in ctx.guild.voice_channels if len(ch.members) > 0]
    
    if not voice_channels:
        await ctx.send("‚ùå –í –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–∞—Ö –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!")
        return
    
    embed = discord.Embed(
        title="üé§ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤",
        description=f"**–°–µ—Ä–≤–µ—Ä:** {ctx.guild.name}",
        color=discord.Color.blue()
    )
    
    for channel in voice_channels:
        members_list = []
        for member in channel.members:
            status_emoji = "üîä" if not member.voice.mute else "üîá"
            if member.voice.self_mute:
                status_emoji = "üîá"
            if member.voice.self_deaf:
                status_emoji = "üîá"
            if member.voice.afk:
                status_emoji = "üò¥"
            
            members_list.append(f"{status_emoji} {member.display_name}")
        
        embed.add_field(
            name=f"üîä {channel.name} ({len(channel.members)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)",
            value="\n".join(members_list[:10]) + ("..." if len(members_list) > 10 else ""),
            inline=False
        )
    
    await ctx.send(embed=embed)

@bot.command(name='botinfo')
async def bot_info(ctx):
    """–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"""
    embed = discord.Embed(
        title="ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
        color=discord.Color.blue()
    )
    embed.add_field(name="–í–µ—Ä—Å–∏—è", value="3.1.0 (Multi-Server + Voice)", inline=True)
    embed.add_field(name="–°–µ—Ä–≤–µ—Ä–æ–≤", value=len(bot.guilds), inline=True)
    embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", value=len(bot.users), inline=True)
    
    channel_id = config.get_log_channel_id(ctx.guild.id)
    channel_info = f"<#{channel_id}>" if channel_id else "–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    embed.add_field(name="–ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤", value=channel_info, inline=False)
    
    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≥–æ–ª–æ—Å–æ–≤–æ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏
    if ctx.guild.voice_client:
        voice_channel = ctx.guild.voice_client.channel
        voice_info = f"üîä {voice_channel.mention}"
    else:
        voice_info = "‚ùå –ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω"
    
    embed.add_field(name="–ì–æ–ª–æ—Å–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", value=voice_info, inline=False)
    
    embed.add_field(name="–ü—Ä–µ—Ñ–∏–∫—Å", value=config.prefix, inline=True)
    embed.add_field(name="–ó–∞–¥–µ—Ä–∂–∫–∞", value=f"{round(bot.latency * 1000)}ms", inline=True)
    embed.add_field(name="–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", value=f"{datetime.utcnow() - bot.start_time if hasattr(bot, 'start_time') else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}", inline=True)
    
    await ctx.send(embed=embed)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
@bot.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.MissingPermissions):
        await ctx.send("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã!")
    elif isinstance(error, commands.CommandNotFound):
        pass
    elif isinstance(error, commands.BadArgument):
        await ctx.send("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã!")
    else:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã {ctx.command}: {error}")
        await ctx.send("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã!")

if __name__ == "__main__":
    if config.token == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è DISCORD_BOT_TOKEN –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ multi_server_config.json")
        exit(1)
    
    try:
        bot.start_time = datetime.utcnow()
        bot.run(config.token)
    except discord.LoginFailure:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ–≤–µ—Ä–Ω—ã–π —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
